#!/usr/bin/python2

import argparse
import sys

from debomber import Debomber

def parse_args(arg_list):
    parser = argparse.ArgumentParser(description=""" debomb cleans up
    directories littered by the contents of ill-packaged archive files (aka
    tar/zip-bombs, where instead of a single directory existing in the top level
    of the archive there are many files). Given an archive name, it will move
    all the archive's extracted members into a directory named after the
    archive.""")

    parser.add_argument('archive', metavar="ARCHIVE",
                        help="The archive file to target.")
    parser.add_argument('-d', '--directory', metavar="DIRECTORY", default=None,
                        help="The directory file to clean up in.")
    parser.add_argument('-f', '--force', action='store_true', default=False,
       help="Clean up even if it's uncertain there was an explosion.")
    parser.add_argument('-P', '--absolute-names', action='store_true',
       help="""Do not strip prefixes from absolute/relative filenames. This
       behaves similarly to tar's -P and will allow extracting to arbitrary
       places in your filesystem, so make sure you trust the archive.""")

    return parser.parse_args(arg_list)

if __name__ == "__main__":
    args = parse_args(sys.argv[1:])
    debomb = Debomber(args.archive, args.directory, args.force, args.absolute_names)
    sploded = debomb.has_exploded()
    if sploded is True:
        debomb.clean()
    elif sploded is False:
        print "No bomb appears to have exploded here"
    else:
        print ("*** Partial explosion detected. The following files from the "
               "archive were not found in the directory:")
        print
        for fn in sploded:
            print fn
        print
        print "Rerun with -f to debomb anyway."
